# name: Tests linux
#
# on:
#   pull_request:
#
# # Concurrency based on workflow name and branch
# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true
#
# jobs:
#   linux:
#     runs-on:
#       group: cupy-ci
#       labels: linux-gpu
#
#     strategy:
#       matrix:
#         target: ["cuda11x-cuda-python", "cuda112", "cuda118", "cuda120", "cuda126"]
#       fail-fast: false
#
#     env:
#       CACHE_DIR: /home/runner/.cupy/kernel_cache
#
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v4
#       with:
#         submodules: recursive
#
#     - name: Check
#       run: |
#         echo "UBUNTU VERSION:"
#         lsb_release -a
#         echo "nvidia-smi:"
#         nvidia-smi
#
#     - name: Restore Cache
#       uses: actions/cache/restore@v4
#       with:
#         path: ~/.cupy/kernel_cache
#         key: ${{ runner.os }}-${{ matrix.target }}-cupy-cache
#         restore-keys: |
#           ${{ runner.os }}-cupy-cache
#
#     - name: Update driver
#       run: |
#         sudo ./.pfnci/linux/update-cuda-driver.sh
#
#     - name: build
#       run: |
#         ./.pfnci/linux/run.sh ${{ matrix.target }} build
#
#     - name: test
#       id: test
#       run: |
#         ./.pfnci/linux/run.sh ${{ matrix.target }} test
#       env:
#         CUPY_NVCC_GENERATE_CODE: "arch=compute_75,code=sm_75"
#         GPU: 1
#
#     - name: Save Cache
#       if: always()
#       uses: actions/cache/save@v4
#       with:
#         path: ~/.cupy/kernel_cache
#         key: ${{ runner.os }}-${{ matrix.target }}-cupy-cache
